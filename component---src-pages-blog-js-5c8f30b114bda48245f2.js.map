{"version":3,"file":"component---src-pages-blog-js-5c8f30b114bda48245f2.js","mappings":"kKAsCA,IA/Ba,SAAC,GAAkD,IAAhDA,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KAChD,OACI,uBAAKC,UAAU,QACF,MAARD,GAAgB,sBAAIC,UAAU,eAAeL,GAC9C,gBAAC,EAAAM,EAAD,CAAaD,UAAU,uBAAuBE,MAAON,EAAWO,IAAI,KACpE,uBAAKH,UAAU,aACF,MAARD,GAAgB,sBAAIC,UAAU,cAAcL,GAC7C,qBAAGK,UAAU,aAAaH,GACjB,MAARE,GACG,gBAAC,EAAAK,KAAD,CAAMJ,UAAU,iBAAiBK,GAAIP,GAArC,qBAKR,uBAAKE,UAAU,eACF,MAARD,EACG,qBAAGC,UAAU,wBACT,mCAAWD,EAAKO,QAChB,mCACA,uCAAeC,EAAAA,EAAAA,OAAe,IAAIC,KAAKT,EAAKU,SAGhD,gBAAC,EAAAL,KAAD,CAAMJ,UAAU,iBAAiBK,GAAIP,GAArC,0B,kFCapB,UAjCiB,SAAC,GAAD,IAAGY,EAAH,EAAGA,KAAH,OACb,gBAAC,IAAD,KACI,gBAAC,IAAD,CACIf,MAAM,OACNE,YAAY,6HAEhB,gBAAC,IAAD,CAAYF,MAAM,SAClB,uBAAKK,UAAU,kBACX,uBAAKA,UAAU,OACVU,EAAKC,MAAMC,MACPC,QAAO,SAAAC,GAAC,OAAmC,IAA/BA,EAAEC,KAAKC,YAAYC,WAC/BC,KAAI,SAAAC,GACD,IAAMpB,EAAOoB,EAAKJ,KAAKC,YACvB,OACI,uBAAKhB,UAAU,wBAAwBoB,IAAKrB,EAAKsB,MAC7C,gBAAC,IAAD,CACI1B,MAAOI,EAAKJ,MACZC,UAAWG,EAAKH,UAAU0B,gBAAgBC,gBAC1C1B,YAAaE,EAAKF,YAClBC,IAAKC,EAAKsB,KACVtB,KAAM,CACFO,OAAQP,EAAKO,OACbG,KAAMV,EAAKU","sources":["webpack://williamneild.com/./src/components/Card.jsx","webpack://williamneild.com/./src/pages/blog.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { Link } from \"gatsby\";\r\nimport { GatsbyImage } from \"gatsby-plugin-image\";\r\n\r\nimport timeAgo from \"../timeAgo\";\r\n\r\nconst Card = ({ title, thumbnail, description, url, post }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            {post == null && <h5 className=\"card-header\">{title}</h5>}\r\n            <GatsbyImage className=\"card-img-top rounded\" image={thumbnail} alt=\"\" />\r\n            <div className=\"card-body\">\r\n                {post != null && <h5 className=\"card-title\">{title}</h5>}\r\n                <p className=\"card-text\">{description}</p>\r\n                {post != null && (\r\n                    <Link className=\"stretched-link\" to={url}>\r\n                        Continue Reading\r\n                    </Link>\r\n                )}\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                {post != null ? (\r\n                    <p className=\"card-text text-muted\">\r\n                        <small>by {post.author}</small>\r\n                        <span> - </span>\r\n                        <small>Posted {timeAgo.format(new Date(post.date))}</small>\r\n                    </p>\r\n                ) : (\r\n                    <Link className=\"stretched-link\" to={url}>\r\n                        Visit project page\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport Layout from \"../components/Layout\";\r\nimport Meta from \"../components/Meta\";\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport Card from \"../components/Card\";\r\n\r\nconst BlogPage = ({ data }) => (\r\n    <Layout>\r\n        <Meta\r\n            title=\"Blog\"\r\n            description=\"A collection of my blog posts which cover a variety of topics including software development and some of my life stories\"\r\n        />\r\n        <PageHeader title=\"Blog\" />\r\n        <div className=\"container my-4\">\r\n            <div className=\"row\">\r\n                {data.posts.edges\r\n                    .filter(p => p.node.frontmatter.publish !== false)\r\n                    .map(edge => {\r\n                        const post = edge.node.frontmatter;\r\n                        return (\r\n                            <div className=\"col-12 mb-4 py-0 px-3\" key={post.slug}>\r\n                                <Card\r\n                                    title={post.title}\r\n                                    thumbnail={post.thumbnail.childImageSharp.gatsbyImageData}\r\n                                    description={post.description}\r\n                                    url={post.slug}\r\n                                    post={{\r\n                                        author: post.author,\r\n                                        date: post.date,\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })}\r\n            </div>\r\n        </div>\r\n    </Layout>\r\n);\r\n\r\nexport default BlogPage;\r\n\r\nexport const query = graphql`\r\n    query BlogPageQuery {\r\n        posts: allMdx(\r\n            filter: { frontmatter: { slug: { regex: \"/blog/\" } } }\r\n            sort: { order: DESC, fields: [frontmatter___date] }\r\n        ) {\r\n            edges {\r\n                node {\r\n                    frontmatter {\r\n                        date(formatString: \"MMMM DD, YYYY\")\r\n                        slug\r\n                        title\r\n                        description\r\n                        author\r\n                        thumbnail {\r\n                            childImageSharp {\r\n                                gatsbyImageData\r\n                            }\r\n                        }\r\n                        publish\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"names":["title","thumbnail","description","url","post","className","G","image","alt","Link","to","author","timeAgo","Date","date","data","posts","edges","filter","p","node","frontmatter","publish","map","edge","key","slug","childImageSharp","gatsbyImageData"],"sourceRoot":""}