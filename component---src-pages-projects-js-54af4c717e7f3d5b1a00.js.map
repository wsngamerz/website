{"version":3,"file":"component---src-pages-projects-js-54af4c717e7f3d5b1a00.js","mappings":"oKAsCA,IA/Ba,SAAC,GAAkD,IAAhDA,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KAChD,OACI,uBAAKC,UAAU,QACF,MAARD,GAAgB,sBAAIC,UAAU,eAAeL,GAC9C,gBAAC,EAAAM,EAAD,CAAaD,UAAU,uBAAuBE,MAAON,EAAWO,IAAI,KACpE,uBAAKH,UAAU,aACF,MAARD,GAAgB,sBAAIC,UAAU,cAAcL,GAC7C,qBAAGK,UAAU,aAAaH,GACjB,MAARE,GACG,gBAAC,EAAAK,KAAD,CAAMJ,UAAU,iBAAiBK,GAAIP,GAArC,qBAKR,uBAAKE,UAAU,eACF,MAARD,EACG,qBAAGC,UAAU,wBACT,mCAAWD,EAAKO,QAChB,mCACA,uCAAeC,EAAAA,EAAAA,OAAe,IAAIC,KAAKT,EAAKU,SAGhD,gBAAC,EAAAL,KAAD,CAAMJ,UAAU,iBAAiBK,GAAIP,GAArC,0B,kFCSpB,UA7BqB,SAAC,GAAD,IAAGY,EAAH,EAAGA,KAAH,OACjB,gBAAC,IAAD,KACI,gBAAC,IAAD,CACIf,MAAM,WACNE,YAAY,+EAEhB,gBAAC,IAAD,CAAYF,MAAM,aAClB,uBAAKK,UAAU,kBACX,uBAAKA,UAAU,OACVU,EAAKC,SAASC,MACVC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,YAAYC,OAASH,EAAEC,KAAKC,YAAYC,UAC9DC,KAAI,SAAAC,GACD,IAAMC,EAAUD,EAAKJ,KAAKC,YAC1B,OACI,uBAAKjB,UAAU,oCAAoCsB,IAAKD,EAAQE,MAC5D,gBAAC,IAAD,CACI5B,MAAO0B,EAAQ1B,MACfC,UAAWyB,EAAQzB,UAAU4B,gBAAgBC,gBAC7C5B,YAAawB,EAAQxB,YACrBC,IAAKuB,EAAQE","sources":["webpack://williamneild.com/./src/components/Card.jsx","webpack://williamneild.com/./src/pages/projects.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { Link } from \"gatsby\";\r\nimport { GatsbyImage } from \"gatsby-plugin-image\";\r\n\r\nimport timeAgo from \"../timeAgo\";\r\n\r\nconst Card = ({ title, thumbnail, description, url, post }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            {post == null && <h5 className=\"card-header\">{title}</h5>}\r\n            <GatsbyImage className=\"card-img-top rounded\" image={thumbnail} alt=\"\" />\r\n            <div className=\"card-body\">\r\n                {post != null && <h5 className=\"card-title\">{title}</h5>}\r\n                <p className=\"card-text\">{description}</p>\r\n                {post != null && (\r\n                    <Link className=\"stretched-link\" to={url}>\r\n                        Continue Reading\r\n                    </Link>\r\n                )}\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                {post != null ? (\r\n                    <p className=\"card-text text-muted\">\r\n                        <small>by {post.author}</small>\r\n                        <span> - </span>\r\n                        <small>Posted {timeAgo.format(new Date(post.date))}</small>\r\n                    </p>\r\n                ) : (\r\n                    <Link className=\"stretched-link\" to={url}>\r\n                        Visit project page\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport Layout from \"../components/Layout\";\r\nimport Meta from \"../components/Meta\";\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport Card from \"../components/Card\";\r\n\r\nconst ProjectsPage = ({ data }) => (\r\n    <Layout>\r\n        <Meta\r\n            title=\"Projects\"\r\n            description=\"A collection of my projects which I have worked on. Basically my portfolio\"\r\n        />\r\n        <PageHeader title=\"Projects\" />\r\n        <div className=\"container my-4\">\r\n            <div className=\"row\">\r\n                {data.projects.edges\r\n                    .sort((a, b) => a.node.frontmatter.weight - b.node.frontmatter.weight)\r\n                    .map(edge => {\r\n                        const project = edge.node.frontmatter;\r\n                        return (\r\n                            <div className=\"col-sm-12 col-md-6 mb-4 py-0 px-3\" key={project.slug}>\r\n                                <Card\r\n                                    title={project.title}\r\n                                    thumbnail={project.thumbnail.childImageSharp.gatsbyImageData}\r\n                                    description={project.description}\r\n                                    url={project.slug}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })}\r\n            </div>\r\n        </div>\r\n    </Layout>\r\n);\r\n\r\nexport default ProjectsPage;\r\n\r\nexport const query = graphql`\r\n    query ProjectPageQuery {\r\n        projects: allMdx(\r\n            filter: { frontmatter: { slug: { regex: \"/projects/\" } } }\r\n            sort: { order: DESC, fields: [frontmatter___date] }\r\n        ) {\r\n            edges {\r\n                node {\r\n                    frontmatter {\r\n                        slug\r\n                        title\r\n                        description\r\n                        thumbnail {\r\n                            childImageSharp {\r\n                                gatsbyImageData\r\n                            }\r\n                        }\r\n                        weight\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"names":["title","thumbnail","description","url","post","className","G","image","alt","Link","to","author","timeAgo","Date","date","data","projects","edges","sort","a","b","node","frontmatter","weight","map","edge","project","key","slug","childImageSharp","gatsbyImageData"],"sourceRoot":""}