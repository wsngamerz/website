{"version":3,"sources":["webpack:///./node_modules/react-icons/lib/esm/iconsManifest.js","webpack:///./node_modules/react-icons/lib/esm/iconContext.js","webpack:///./node_modules/react-icons/lib/esm/iconBase.js","webpack:///./src/components/SocialMediaItem.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/Card.jsx"],"names":["DefaultContext","color","undefined","size","className","style","attr","IconContext","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","GenIcon","data","props","IconBase","Tree2Element","tree","map","node","tag","key","child","elem","conf","computedSize","title","svgProps","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer","SocialMediaItem","text","icon","url","Icon","href","fontSize","IndexPage","Layout","Meta","PageHeader","site","siteMetadata","subtitle","description","typewriter","alternatives","alternativeDescriptions","big","buttons","latestProjects","edges","edge","project","frontmatter","Card","slug","thumbnail","childImageSharp","fluid","Advert","latestPosts","post","excerpt","author","date","to","FaFacebook","FaTwitter","FaInstagram","FaGithub","FaLinkedin"],"mappings":"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","file":"component---src-pages-index-js-e8d614158d44809678d4.js","sourcesContent":["export var IconsManifest = [{\n  \"id\": \"fa\",\n  \"name\": \"Font Awesome\",\n  \"projectUrl\": \"https://fontawesome.com/\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"io\",\n  \"name\": \"Ionicons\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"md\",\n  \"name\": \"Material Design icons\",\n  \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n}, {\n  \"id\": \"ti\",\n  \"name\": \"Typicons\",\n  \"projectUrl\": \"http://s-ings.com/typicons/\",\n  \"license\": \"CC BY-SA 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n}, {\n  \"id\": \"go\",\n  \"name\": \"Github Octicons icons\",\n  \"projectUrl\": \"https://octicons.github.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"fi\",\n  \"name\": \"Feather\",\n  \"projectUrl\": \"https://feathericons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n}, {\n  \"id\": \"gi\",\n  \"name\": \"Game Icons\",\n  \"projectUrl\": \"https://game-icons.net/\",\n  \"license\": \"CC BY 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n}, {\n  \"id\": \"wi\",\n  \"name\": \"Weather Icons\",\n  \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n  \"license\": \"SIL OFL 1.1\",\n  \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n}, {\n  \"id\": \"di\",\n  \"name\": \"Devicons\",\n  \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ai\",\n  \"name\": \"Ant Design Icons\",\n  \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"bs\",\n  \"name\": \"Bootstrap Icons\",\n  \"projectUrl\": \"https://github.com/twbs/icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ri\",\n  \"name\": \"Remix Icon\",\n  \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"fc\",\n  \"name\": \"Flat Color Icons\",\n  \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"gr\",\n  \"name\": \"Grommet-Icons\",\n  \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"hi\",\n  \"name\": \"Heroicons\",\n  \"projectUrl\": \"https://github.com/refactoringui/heroicons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"si\",\n  \"name\": \"Simple Icons\",\n  \"projectUrl\": \"https://simpleicons.org/\",\n  \"license\": \"CC0 1.0 Universal\",\n  \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n}, {\n  \"id\": \"im\",\n  \"name\": \"IcoMoon Free\",\n  \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n  \"license\": \"CC BY 4.0 License\"\n}, {\n  \"id\": \"bi\",\n  \"name\": \"BoxIcons\",\n  \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n  \"license\": \"CC BY 4.0 License\"\n}, {\n  \"id\": \"cg\",\n  \"name\": \"css.gg\",\n  \"projectUrl\": \"https://github.com/astrit/css.gg\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"vsc\",\n  \"name\": \"VS Code Icons\",\n  \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n  \"license\": \"CC BY 4.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}];","import * as React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function elem(conf) {\n    var computedSize = props.size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n\n    var attr = props.attr,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"title\"]);\n\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign({\n        color: props.color || conf.color\n      }, conf.style, props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","import React from \"react\"\r\n\r\nimport { OutboundLink } from \"gatsby-plugin-gtag\"\r\n\r\nconst SocialMediaItem = ({ text, icon, url }) => {\r\n    const Icon = icon\r\n    return (\r\n        <OutboundLink className=\"list-group-item list-group-item-action d-flex align-items-center\" href={url}>\r\n            <Icon fontSize=\"32px\" />\r\n            <span className=\"pl-3\">{text}</span>\r\n        </OutboundLink>\r\n    )\r\n}\r\n\r\nexport default SocialMediaItem\r\n","import React from \"react\"\r\n\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { FaFacebook, FaInstagram, FaGithub, FaLinkedin, FaTwitter } from \"react-icons/fa\"\r\n\r\nimport Layout from \"../components/Layout\"\r\nimport Meta from \"../components/Meta\"\r\nimport PageHeader from \"../components/PageHeader\"\r\nimport Card from \"../components/Card\"\r\nimport SocialMediaItem from \"../components/SocialMediaItem\"\r\nimport Advert from \"../components/Advert\"\r\n\r\nconst IndexPage = ({ data }) => {\r\n    return (\r\n        <Layout>\r\n            <Meta title=\"Home\" />\r\n            <PageHeader\r\n                title={data.site.siteMetadata.title}\r\n                subtitle={data.site.siteMetadata.description}\r\n                typewriter={true}\r\n                alternatives={data.site.siteMetadata.alternativeDescriptions}\r\n                big={true}\r\n                buttons={[\r\n                    [\"Blog\", \"/blog\"],\r\n                    [\"Projects\", \"/projects\"],\r\n                ]}\r\n            />\r\n            <div className=\"bg-dark text-light\">\r\n                <div className=\"container py-4\">\r\n                    <div className=\"row py-4\">\r\n                        <div className=\"col-12\">\r\n                            <h3>Hello and welcome to my website</h3>\r\n                            <p>\r\n                                Here you will be able to view a wonderful selection of my projects and have a read\r\n                                through some of my blog posts where I will talk about a variety of topics including\r\n                                software development, recent technological advancements and also some of my own life\r\n                                stories (because people want to know about that).\r\n                            </p>\r\n                            <p>I hope that you enjoy your time here!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"\">\r\n                <div className=\"container pt-4\">\r\n                    <div className=\"row pt-4\">\r\n                        <div className=\"col-12\">\r\n                            <h3>Projects</h3>\r\n                            <p>Here is a list of my projects, basically my portfolio.</p>\r\n                            <div className=\"card-group py-1\">\r\n                                {data.latestProjects.edges.map(edge => {\r\n                                    const project = edge.node.frontmatter\r\n                                    return (\r\n                                        <Card\r\n                                            key={project.slug}\r\n                                            title={project.title}\r\n                                            thumbnail={project.thumbnail.childImageSharp.fluid}\r\n                                            description={project.description}\r\n                                            url={project.slug}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 my-4\">\r\n                            <Advert />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bg-light\">\r\n                <div className=\"container py-4\">\r\n                    <div className=\"row py-4\">\r\n                        <div className=\"col-12\">\r\n                            <h3 className=\"mb-3\">Recent Posts</h3>\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-md-8\">\r\n                            {data.latestPosts.edges.map(edge => {\r\n                                const post = edge.node.frontmatter\r\n                                return (\r\n                                    <div className=\"col-12 mb-4 p-0\" key={post.slug}>\r\n                                        <Card\r\n                                            title={post.title}\r\n                                            thumbnail={post.thumbnail.childImageSharp.fluid}\r\n                                            description={edge.node.excerpt}\r\n                                            url={post.slug}\r\n                                            post={{\r\n                                                author: post.author,\r\n                                                date: post.date,\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            <div className=\"col-12 p-0\">\r\n                                <Link className=\"btn btn-secondary btn-block mb-4\" to=\"/blog\">\r\n                                    View more\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-12 col-md-4\">\r\n                            <div className=\"list-group\">\r\n                                <div className=\"list-group-item list-group-item-secondary\">\r\n                                    <p className=\"m-0\">Social Media</p>\r\n                                </div>\r\n                                <SocialMediaItem\r\n                                    text=\"Facebook\"\r\n                                    icon={FaFacebook}\r\n                                    url=\"https://www.facebook.com/william.neild.2\"\r\n                                />\r\n                                <SocialMediaItem text=\"Twitter\" icon={FaTwitter} url=\"https://twitter.com/wsngamerz\" />\r\n                                <SocialMediaItem\r\n                                    text=\"Instagram\"\r\n                                    icon={FaInstagram}\r\n                                    url=\"https://instagram.com/wneild5\"\r\n                                />\r\n                                <SocialMediaItem text=\"Github\" icon={FaGithub} url=\"https://github.com/wsngamerz\" />\r\n                                <SocialMediaItem\r\n                                    text=\"Linkedin\"\r\n                                    icon={FaLinkedin}\r\n                                    url=\"https://linkedin.com/in/wneild5\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const query = graphql`\r\n    query HomePageQuery {\r\n        site {\r\n            siteMetadata {\r\n                title\r\n                description\r\n                alternativeDescriptions\r\n            }\r\n        }\r\n        latestPosts: allMdx(\r\n            filter: { frontmatter: { slug: { regex: \"/blog/\" } } }\r\n            sort: { order: DESC, fields: [frontmatter___date] }\r\n            limit: 5\r\n        ) {\r\n            edges {\r\n                node {\r\n                    excerpt(pruneLength: 160)\r\n                    frontmatter {\r\n                        date\r\n                        slug\r\n                        title\r\n                        description\r\n                        author\r\n                        thumbnail {\r\n                            childImageSharp {\r\n                                fluid(maxWidth: 1200) {\r\n                                    ...GatsbyImageSharpFluid_withWebp\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        latestProjects: allMdx(filter: { frontmatter: { slug: { regex: \"/projects/\" } } }, limit: 5) {\r\n            edges {\r\n                node {\r\n                    frontmatter {\r\n                        slug\r\n                        title\r\n                        description\r\n                        thumbnail {\r\n                            childImageSharp {\r\n                                fluid(maxWidth: 1200) {\r\n                                    ...GatsbyImageSharpFluid_withWebp\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n","import React from \"react\"\r\n\r\nimport { Link } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n// import RelativeTime from \"react-relative-timer\"\r\n\r\nconst Card = ({ title, thumbnail, description, url, post }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            {post == null && <h5 className=\"card-header\">{title}</h5>}\r\n            <Img className=\"card-img-top rounded\" fluid={thumbnail} />\r\n            <div className=\"card-body\">\r\n                {post != null && <h5 className=\"card-title\">{title}</h5>}\r\n                <p className=\"card-text\">{description}</p>\r\n                {post != null && (\r\n                    <Link className=\"stretched-link\" to={url}>\r\n                        Continue Reading\r\n                    </Link>\r\n                )}\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                {post != null ? (\r\n                    <p className=\"card-text text-muted\">\r\n                        <small>by {post.author}</small>\r\n                        <span> - </span>\r\n                        <small>\r\n                            {/* Posted <RelativeTime value={post.date} /> */}\r\n                            Posted {post.date}\r\n                        </small>\r\n                    </p>\r\n                ) : (\r\n                    <Link className=\"stretched-link\" to={url}>\r\n                        Visit project page\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n"],"sourceRoot":""}