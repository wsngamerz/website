{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/Card.jsx"],"names":["ProjectsPage","data","title","description","className","projects","edges","map","edge","node","frontmatter","key","slug","thumbnail","childImageSharp","fluid","url","Card","post","to","author","date"],"mappings":"8FAAA,gFAoCeA,UA3BM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,MAAM,WACNC,YAAY,+EAEhB,kBAAC,IAAD,CAAYD,MAAM,aAClB,yBAAKE,UAAU,kBACX,yBAAKA,UAAU,OACVH,EAAKI,SAASC,MAAMC,KAAI,SAAAC,GACrB,IAAMH,EAAWG,EAAKC,KAAKC,YAC3B,OACI,yBAAKN,UAAU,wBAAwBO,IAAKN,EAASO,MACjD,kBAAC,IAAD,CACIV,MAAOG,EAASH,MAChBW,UAAWR,EAASQ,UAAUC,gBAAgBC,MAC9CZ,YAAaE,EAASF,YACtBa,IAAKX,EAASO,gB,kCC1B9C,0DAyCeK,IAlCF,SAAC,GAAkD,IAAhDf,EAA+C,EAA/CA,MAAOW,EAAwC,EAAxCA,UAAWV,EAA6B,EAA7BA,YAAaa,EAAgB,EAAhBA,IAAKE,EAAW,EAAXA,KAChD,OACI,yBAAKd,UAAU,QACF,MAARc,GAAgB,wBAAId,UAAU,eAAeF,GAC9C,kBAAC,IAAD,CAAKE,UAAU,uBAAuBW,MAAOF,IAC7C,yBAAKT,UAAU,aACF,MAARc,GAAgB,wBAAId,UAAU,cAAcF,GAC7C,uBAAGE,UAAU,aAAaD,GACjB,MAARe,GACG,kBAAC,OAAD,CAAMd,UAAU,iBAAiBe,GAAIH,GAArC,qBAKR,yBAAKZ,UAAU,eACF,MAARc,EACG,uBAAGd,UAAU,wBACT,qCAAWc,EAAKE,QAChB,qCACA,yCAEYF,EAAKG,OAIrB,kBAAC,OAAD,CAAMjB,UAAU,iBAAiBe,GAAIH,GAArC","file":"component---src-pages-projects-js-a54aff387222f89d69cb.js","sourcesContent":["import React from \"react\"\r\n\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/Layout\"\r\nimport Meta from \"../components/Meta\"\r\nimport PageHeader from \"../components/PageHeader\"\r\nimport Card from \"../components/Card\"\r\n\r\nconst ProjectsPage = ({ data }) => (\r\n    <Layout>\r\n        <Meta\r\n            title=\"Projects\"\r\n            description=\"A collection of my projects which I have worked on. Basically my portfolio\"\r\n        />\r\n        <PageHeader title=\"Projects\" />\r\n        <div className=\"container my-4\">\r\n            <div className=\"row\">\r\n                {data.projects.edges.map(edge => {\r\n                    const projects = edge.node.frontmatter\r\n                    return (\r\n                        <div className=\"col-12 mb-4 py-0 px-3\" key={projects.slug}>\r\n                            <Card\r\n                                title={projects.title}\r\n                                thumbnail={projects.thumbnail.childImageSharp.fluid}\r\n                                description={projects.description}\r\n                                url={projects.slug}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    </Layout>\r\n)\r\n\r\nexport default ProjectsPage\r\n\r\nexport const query = graphql`\r\n    query ProjectPageQuery {\r\n        projects: allMdx(\r\n            filter: { frontmatter: { slug: { regex: \"/projects/\" } } }\r\n            sort: { order: DESC, fields: [frontmatter___date] }\r\n        ) {\r\n            edges {\r\n                node {\r\n                    frontmatter {\r\n                        slug\r\n                        title\r\n                        description\r\n                        thumbnail {\r\n                            childImageSharp {\r\n                                fluid(maxWidth: 1200) {\r\n                                    ...GatsbyImageSharpFluid_withWebp\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n","import React from \"react\"\r\n\r\nimport { Link } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n// import RelativeTime from \"react-relative-timer\"\r\n\r\nconst Card = ({ title, thumbnail, description, url, post }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            {post == null && <h5 className=\"card-header\">{title}</h5>}\r\n            <Img className=\"card-img-top rounded\" fluid={thumbnail} />\r\n            <div className=\"card-body\">\r\n                {post != null && <h5 className=\"card-title\">{title}</h5>}\r\n                <p className=\"card-text\">{description}</p>\r\n                {post != null && (\r\n                    <Link className=\"stretched-link\" to={url}>\r\n                        Continue Reading\r\n                    </Link>\r\n                )}\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                {post != null ? (\r\n                    <p className=\"card-text text-muted\">\r\n                        <small>by {post.author}</small>\r\n                        <span> - </span>\r\n                        <small>\r\n                            {/* Posted <RelativeTime value={post.date} /> */}\r\n                            Posted {post.date}\r\n                        </small>\r\n                    </p>\r\n                ) : (\r\n                    <Link className=\"stretched-link\" to={url}>\r\n                        Visit project page\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n"],"sourceRoot":""}